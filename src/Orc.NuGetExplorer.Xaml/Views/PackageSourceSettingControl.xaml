<catel:UserControl x:Class="Orc.NuGetExplorer.Views.PackageSourceSettingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:catel="http://schemas.catelproject.com"
             xmlns:orc="http://schemas.wildgums.com/orc/controls"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Orc.NuGetExplorer.Views"
             xmlns:controls="clr-namespace:Orc.NuGetExplorer.Controls"
             xmlns:converters="clr-namespace:Orc.NuGetExplorer.Converters"
             xmlns:global="clr-namespace:Orc.NuGetExplorer"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:b="clr-namespace:Orc.NuGetExplorer.Behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="400">
    <catel:UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </catel:UserControl.Resources>
    
    <catel:InfoBarMessageControl>
        <Grid Margin="4 2 4 2">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="4 0 0 0"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <catel:WarningAndErrorValidator Source="{Binding}" />

            <TextBlock Text="Package source" 
                   VerticalAlignment="Center" 
                   Margin="2 2 2 2"/>

            <ListBox Grid.Row="1" Grid.ColumnSpan="2"
                 Margin="0 4 2 0"
                 SelectedItem="{Binding SelectedFeed}"
                 HorizontalContentAlignment="Stretch"
                 VerticalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemsSource="{Binding Feeds}">
                <i:Interaction.Behaviors>
                    <catel:Focus/>
                    <b:SelectFirstItemOnContextBehavior/>
                </i:Interaction.Behaviors>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="4">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>

                            <CheckBox VerticalAlignment="Center" Margin="4 2 4 2"
                                  IsChecked="{Binding IsEnabled}"/>

                            <TextBlock Grid.Column="1"
                                       TextTrimming="WordEllipsis"
                                       Margin="4 0 4 0">
                                       <Run Text="{Binding Name, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                                       <LineBreak/>
                                       <Run Text="{Binding Source, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            </TextBlock>

                            <controls:RotationProgressBar Speed="5" x:Name="CircularBar" 
                                                          Maximum="2" Minimum="0" 
                                                          Grid.Column="2"
                                                          Success="{Binding IsAccessible}"
                                                          Value="{Binding IsVerifiedNow, Converter={converters:BoolToIntConverter}, UpdateSourceTrigger=PropertyChanged}">
                                <controls:RotationProgressBar.IconData>
                                    <Path Data="{Binding Source={StaticResource RotationArrow}, Path=Data}"/>
                                </controls:RotationProgressBar.IconData>
                            </controls:RotationProgressBar>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource DefaultListBoxItemStyle}"/>
                </ListBox.ItemContainerStyle>
            </ListBox>


            <StackPanel x:Name="ButtonsPanel"
                    Orientation="Horizontal"
                    Grid.Column="1"
                    HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource SettingsButton}">
                    </Style>
                </StackPanel.Resources>
                <Button x:Name="AddBtn" 
                    Command="{Binding AddFeed}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <Viewbox>
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{Binding Source={StaticResource Plus}, Path=Data}" Fill="{DynamicResource DefaultButtonIconColorBrush}"/>
                                </Canvas>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource PressedButtonIconColorBrush}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="False">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource DisabledButtonIconColorBrush}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button x:Name="RemoveBtn"
                    Command="{Binding RemoveFeed}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <Viewbox>
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{Binding Source={StaticResource Minus}, Path=Data}" Fill="{DynamicResource DefaultButtonIconColorBrush}"/>
                                </Canvas>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource PressedButtonIconColorBrush}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="False">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource DisabledButtonIconColorBrush}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button x:Name="MoveUpBtn"
                    Command="{Binding MoveUpFeed}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <Viewbox>
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{Binding Source={StaticResource Arrow-up-bold}, Path=Data}" Fill="{DynamicResource DefaultButtonIconColorBrush}"/>
                                </Canvas>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource PressedButtonIconColorBrush}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="False">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource DisabledButtonIconColorBrush}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button x:Name="MoveDownBtn"
                    Command="{Binding MoveDownFeed}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <Viewbox>
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{Binding Source={StaticResource Arrow-down-bold}, Path=Data}"  Fill="{DynamicResource DefaultButtonIconColorBrush}"/>
                                </Canvas>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource PressedButtonIconColorBrush}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="False">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource DisabledButtonIconColorBrush}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button x:Name="ResetBtn"
                        Command="{Binding Reset}"
                        Visibility="{Binding CanReset, Converter={catel:BooleanToCollapsingVisibilityConverter}}"
                        ToolTip="Reset package source settings">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <Viewbox>
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{Binding Source={StaticResource Broom}, Path=Data}" Fill="{DynamicResource DefaultButtonIconColorBrush}"/>
                                </Canvas>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource PressedButtonIconColorBrush}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="False">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource DisabledButtonIconColorBrush}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
            </StackPanel>

            <local:FeedDetailView DataContext="{Binding SelectedFeed}"
                                  HorizontalAlignment="Stretch"
                            Grid.Row="2"
                            Grid.ColumnSpan="2"
                            Margin="0 12 0 0">
            </local:FeedDetailView>
            

            <Separator Grid.Row="3" Grid.ColumnSpan="2"
                   Margin="0 8 0 0"/>
        </Grid>
    </catel:InfoBarMessageControl>

</catel:UserControl>
