<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Orc.NuGetExplorer.Controls"
                    xmlns:catel="http://schemas.catelproject.com"
                    xmlns:orccontrols="http://schemas.wildgums.com/orc/controls"
                    xmlns:orc="http://schemas.wildgums.com/orc/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Orc.Controls;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/Brushes.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/MaterialIcons.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Controls/RotationProgressBar.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Controls/Badged.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/Shadows.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/CompiledResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="HiddenListViewHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Hidden" />
    </Style>
        
    <Style x:Key="SettingsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="Width" Value="24"></Setter>
        <Setter Property="Margin" Value="3 2 3 2"/>
    </Style>
    
    <Style TargetType="local:RotationProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template" Value="{StaticResource RotationProgressBar}"/>
    </Style>

    <Style TargetType="local:Badged">
        <Setter Property="Template" Value="{StaticResource Badged}"/>
    </Style>

    <Style x:Key="DefaultListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{orc:ThemeColor ThemeColorStyle=AccentColor4}"/>
        </Style.Resources>

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFABADB3"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="LabelButton">
        <Style.Resources>
            <SolidColorBrush x:Key="TransparenBrush" Color="Transparent"/>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="#00FFFFFF"
                          Name="templateRoot"
                          SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            BorderBrush="{StaticResource TransparenBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="radioButtonBorder"
                            Margin="0"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">

                            <Grid Name="clickableContent">
                                <ContentPresenter RecognizesAccessKey="True"
                                         Content="{TemplateBinding ContentControl.Content}"
                                         ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                         ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                         Name="contentPresenter"  
                                         Margin="0"
                                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                         SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                         Focusable="False"/>
                            </Grid>
                        </Border>


                        <Rectangle x:Name="_underline"
                                   Grid.Row="1"
                                   Margin="0"
                                   Height="3"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource TabSelectedBrushKey}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentControl.HasContent" Value="True">
                            <Setter Property="FrameworkElement.FocusVisualStyle">
                                <Setter.Value>
                                    <Style TargetType="IFrameworkInputElement">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                        StrokeThickness="1"
                                                        StrokeDashArray="1 2"
                                                        Margin="14,0,0,0"
                                                        SnapsToDevicePixels="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Padding">
                                <Setter.Value>
                                    <Thickness>4,-1,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <!--<Setter Property="Panel.Background"
                                    TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFF3F9FF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush"
                                    TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FF5593FF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <!--<Setter Property="Panel.Background"
                                    TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFE6E6E6</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush"
                                    TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFBCBCBC</SolidColorBrush>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <!--<Setter Property="Panel.Background"
                                    TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFD9ECFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush"
                                    TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FF3C77DD</SolidColorBrush>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="_underline" 
                                    Value="Visible">
                            </Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="_underline" 
                                    Value="Collapsed">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true"
                                     VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                     HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <BulletDecorator.Bullet>
                            <Border x:Name="CheckBoxBorder"
                                    Height="12"
                                    Width="12"
                                    BorderBrush="{orccontrols:ThemeColorBrush ThemeColorStyle=BorderColor}"
                                    BorderThickness="1"
                                    Background="White">
                                <Path x:Name="CheckMark"
                                      Data="M7.2,5 L5.5,7.16 4.16,6.3 3.5,6.7 5.5,8.4 8.6,5.25 C8.6,5.25 8,4.7 7.22,5"
                                      Height="Auto"
                                      Width="Auto"
                                      Stretch="Fill"
                                      Fill="{DynamicResource DefaultButtonIconColorBrush}"
                                      Margin="1,1.007,1,1"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{orccontrols:ThemeColorBrush ThemeColorStyle=ForegroundDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="CheckBoxBorder" Value="{orccontrols:ThemeColorBrush ThemeColorStyle=BackgroundMouseOver}"/>
                            <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="{orccontrols:ThemeColorBrush ThemeColorStyle=BorderMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>